#--------- Generic stuff all our Dockerfiles should start with so we get caching ------------
FROM ubuntu:12.04
MAINTAINER Ido Shamon

# Configuring locales
ENV DEBIAN_FRONTEND noninteractive
RUN dpkg-reconfigure locales && \
      locale-gen en_US.UTF-8 && \
      update-locale LANG=en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8


#-------------Application Specific Stuff ----------------------------------------------------

RUN apt-get update && \
    apt-get install -y \
    software-properties-common \
    python-software-properties \
    git \
    vim \
    build-essential \
    autoconf

RUN add-apt-repository ppa:cartodb/postgresql-9.3 && \
    apt-get update && \
    apt-get install -y \
    postgresql-9.3 \
    postgresql-client-9.3 \
    postgresql-contrib-9.3 \
    postgresql-server-dev-9.3 \
    postgresql-plpython-9.3 \
    postgresql-9.3-plproxy \
    postgresql-9.3-postgis-2.1 \
    postgresql-9.3-postgis-2.1-scripts

RUN add-apt-repository ppa:cartodb/gis && \
    apt-get update && \
    apt-get install -y \
    proj \
    proj-bin \
    proj-data \
    libproj-dev \
    libjson0 \
    libjson0-dev \
    python-simplejson \
    libgeos-c1v5 \ 
    libgeos-dev \
    gdal-bin \
    libgdal1-dev \
    libgdal-dev \
    ogr2ogr2-static-bin \
    libxml2-dev \
    liblwgeom-2.1.8

# auth configuration
ADD ./auth-configuration.sh /tmp/auth-configuration.sh
RUN chmod 0755 /tmp/auth-configuration.sh
RUN /tmp/auth-configuration.sh

# Setting PostgreSQL
# RUN rm /etc/postgresql/9.3/main/pg_hba.conf
# ADD ./pg_hba.conf /etc/postgresql/9.3/main/

# Setting PostgreSQL
RUN sed -i 's/\(peer\|md5\)/trust/' /etc/postgresql/9.3/main/pg_hba.conf && \
    pgtune -T Web -c 100 -i /etc/postgresql/9.3/main/postgresql.conf -o /etc/postgresql/9.3/main/postgresql.conf.pgtune && \
    mv /etc/postgresql/9.3/main/postgresql.conf /etc/postgresql/9.3/main/postgresql.conf.orig && \
    mv /etc/postgresql/9.3/main/postgresql.conf.pgtune /etc/postgresql/9.3/main/postgresql.conf


# Install schema_triggers
RUN git clone https://github.com/CartoDB/pg_schema_triggers.git && \
    cd pg_schema_triggers && \
    make all install && \
    sed -i \
    "/#shared_preload/a shared_preload_libraries = 'schema_triggers.so'" \
    /etc/postgresql/9.3/main/postgresql.conf
ADD ./template_postgis.sh /tmp/template_postgis.sh
RUN service postgresql start && /bin/su postgres -c \
    /tmp/template_postgis.sh && service postgresql stop


# Install cartodb extension
RUN git clone https://github.com/CartoDB/cartodb-postgresql && \
    cd cartodb-postgresql && \
    PGUSER=postgres make install
ADD ./cartodb_pgsql.sh /tmp/cartodb_pgsql.sh
RUN service postgresql start && /bin/su postgres -c \
    /tmp/cartodb_pgsql.sh && service postgresql stop

# Geocoder SQL client + server
RUN git clone https://github.com/CartoDB/geocoder-api.git &&\
    ln -s /usr/local/rvm/rubies/ruby-2.2.3/bin/ruby /usr/bin &&\
    cd geocoder-api/server/extension && PGUSER=postgres make install &&\
    cd ../../client && PGUSER=postgres make install

RUN apt-get install -y netcat
#---------------------------------------------------------------------------------------------

# Open port 5432 so linked containers can see them
EXPOSE 5432

# We will RUN any commands in this when the container starts
ADD start-postgis.sh /start-postgis.sh
RUN chmod 0755 /start-postgis.sh

CMD /start-postgis.sh
