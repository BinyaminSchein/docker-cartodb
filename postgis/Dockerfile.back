FROM ubuntu:12.04
MAINTAINER Ido Shamon

ENV DEBIAN_FRONTEND noninteractive
RUN locale-gen en_US.UTF-8
RUN update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8

RUN apt-get update && \
    apt-get install -y \
    software-properties-common \
    python-software-properties && \
    add-apt-repository ppa:cartodb/postgresql-9.3 && \
    add-apt-repository ppa:cartodb/gis && \
    apt-get update

# Some dependencies
RUN apt-get install -y \
    autoconf binutils-doc \
    bison build-essential make \
    netcat git pwgen ca-certificates \
    flex vim 

# -------------Application Specific Stuff ----------------------------------------------------
# Install client packages
RUN apt-get install -y \
    libpq5 libpq-dev \
    postgresql-client-9.3 \
    postgresql-client-common \
    postgresql-9.3 \
    postgresql-contrib-9.3 \
    postgresql-server-dev-9.3 \
    postgresql-plpython-9.3 \
    postgresql-9.3-plproxy \
    pgtune \
    proj proj-bin proj-data libproj-dev \
    libjson0 libjson0-dev \
    python-simplejson python-setuptools \
    libgeos-c1v5 libgeos-dev \
    gdal-bin libgdal1-dev libgdal-dev \
    ogr2ogr2-static-bin

# Postgis
RUN apt-get install -y \
    libxml2-dev liblwgeom-2.1.8 \
    postgis postgresql-9.3-postgis-2.2 \
    postgresql-9.3-postgis-scripts

# Set connections policy
RUN rm /etc/postgresql/9.3/main/pg_hba.conf
ADD ./pg_hba.conf /etc/postgresql/9.3/main/pg_hba.conf

ADD auth-configuration.sh /home/auth-configuration.sh
RUN chmod 0755 /home/auth-configuration.sh
RUN service postgresql start && /home/auth-configuration.sh && \
    service postgresql stop

# Install schema_triggers
RUN git clone https://github.com/CartoDB/pg_schema_triggers.git && \
    cd pg_schema_triggers && \
    make all install && \
    sed -i \
    "/#shared_preload/a shared_preload_libraries = 'schema_triggers.so'" \
    /etc/postgresql/9.3/main/postgresql.conf

# Install cartodb extension
RUN git clone https://github.com/CartoDB/cartodb-postgresql && \
      cd cartodb-postgresql && \
      PGUSER=postgres make install

# Setup template database
ADD ./template_postgis.sh /tmp/template_postgis.sh
RUN service postgresql start && /bin/su postgres -c \
      /tmp/template_postgis.sh && service postgresql stop

# Install Ruby
RUN apt-get install -y wget
RUN cd /tmp && \
    wget -O ruby-install-0.5.0.tar.gz https://github.com/postmodern/ruby-install/archive/v0.5.0.tar.gz && \
    tar -xzvf ruby-install-0.5.0.tar.gz && \
    cd ruby-install-0.5.0/ && \
    make install && \
    ruby-install ruby 2.2.3

ENV PATH $PATH:/opt/rubies/ruby-2.2.3/bin

# Install dataservices API client extension
RUN git clone https://github.com/CartoDB/dataservices-api.git && \
    cd /dataservices-api/client && \
    service postgresql start && \
    PGUSER=postgres make all install installcheck && \
    service postgresql stop

# Run tests
RUN service postgresql start && \
    cd /cartodb-postgresql && \
    PGUSER=postgres make installcheck && \
    service postgresql stop

# Copy all postgresql data becuase of volume initialization
RUN mkdir /tmp/postgres-backup 
RUN cp -r /var/lib/postgresql/* /tmp/postgres-backup/

# Open port 5432 so linked containers can see them
EXPOSE 5432

# We will RUN any commands in this when the container starts
ADD start-postgis.sh /start-postgis.sh
RUN chmod 0755 /start-postgis.sh

CMD /start-postgis.sh

# Setting PostgreSQL
# RUN pgtune -T Web -c 100 -i /etc/postgresql/9.3/main/postgresql.conf -o /etc/postgresql/9.3/main/postgresql.conf.pgtune && \
#    mv /etc/postgresql/9.3/main/postgresql.conf /etc/postgresql/9.3/main/postgresql.conf.orig && \
#    mv /etc/postgresql/9.3/main/postgresql.conf.pgtune /etc/postgresql/9.3/main/postgresql.conf

## Geocoder SQL client + server
#RUN git clone https://github.com/CartoDB/data-services && \
#  cd /data-services/geocoder/extension && PGUSER=postgres make all install && cd / && \
#  git clone https://github.com/CartoDB/dataservices-api.git && \
#  ln -s /usr/local/rvm/rubies/ruby-2.2.3/bin/ruby /usr/bin && \
#  cd /dataservices-api/server/extension && PGUSER=postgres make install && \
#  cd ../lib/python/cartodb_services && python setup.py install && \
#  cd ../../../../client && PGUSER=postgres make install && \
#  service postgresql start && \
#  echo "CREATE ROLE geocoder WITH LOGIN SUPERUSER PASSWORD 'geocoder'" | psql -U postgres postgres &&\
#  createdb -U postgres -E UTF8 -O geocoder geocoder &&\
#  echo 'CREATE EXTENSION plpythonu;CREATE EXTENSION postgis;CREATE EXTENSION cartodb;CREATE EXTENSION cdb_geocoder;CREATE EXTENSION plproxy;CREATE EXTENSION cdb_dataservices_server;CREATE EXTENSION cdb_dataservices_client;' | psql -U geocoder geocoder &&\
#  service postgresql stop

